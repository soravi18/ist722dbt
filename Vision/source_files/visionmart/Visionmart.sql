create or replace TABLE VISION.VISIONMART.ACCOUNT_VALIDITY (
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	ACCOUNT_CREATED_DATE TIMESTAMP_NTZ(9) NOT NULL,
	IS_ACTIVE BOOLEAN NOT NULL,
	constraint PK_ACCOUNT_VALIDITY primary key (CUSTOMER_ID),
	constraint FK_ACCOUNT_VALIDITY_CUSTOMERS foreign key (CUSTOMER_ID) references VISION.VISIONMART.CUSTOMERS(CUSTOMER_ID)
);

create or replace TABLE VISION.VISIONMART.CREDITCARDS (
	CREDITCARD_ID NUMBER(38,0) NOT NULL,
	CREDITCARD_NUMBER VARCHAR(50) NOT NULL,
	CREDITCARD_EXP_DATE TIMESTAMP_NTZ(9) NOT NULL,
	constraint PK_CREDITCARD_ID primary key (CREDITCARD_ID)
);

create or replace TABLE VISION.VISIONMART.CUSTOMERS (
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	CUSTOMER_EMAIL VARCHAR(100),
	CUSTOMER_FIRSTNAME VARCHAR(50) NOT NULL,
	CUSTOMER_LASTNAME VARCHAR(50) NOT NULL,
	CUSTOMER_ADDRESS VARCHAR(255) NOT NULL,
	CUSTOMER_CITY VARCHAR(50) NOT NULL,
	CUSTOMER_STATE VARCHAR(2) NOT NULL,
	CUSTOMER_ZIP VARCHAR(20) NOT NULL,
	CUSTOMER_PHONE VARCHAR(30) NOT NULL,
	CUSTOMER_FAX VARCHAR(30),
	constraint PK_CUSTOMERS_CUSTOMER_ID primary key (CUSTOMER_ID)
);


create or replace TABLE VISION.VISIONMART.CUSTOMER_CREDITCARDS (
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	CREDITCARD_ID NUMBER(38,0) NOT NULL,
	constraint PK_CUSTOMER_CREDITCARDS primary key (CUSTOMER_ID, CREDITCARD_ID),
	constraint FK_CUSTOMER_CREDITCARDS_CREDITCARD_ID foreign key (CREDITCARD_ID) references VISION.VISIONMART.CREDITCARDS(CREDITCARD_ID),
	constraint CUSTOMERS_CUSTOMER_CREDITCARDS foreign key (CUSTOMER_ID) references VISION.VISIONMART.CUSTOMERS(CUSTOMER_ID)
);


create or replace TABLE VISION.VISIONMART.CUSTOMER_PRODUCT_REVIEWS (
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	PRODUCT_ID NUMBER(38,0) NOT NULL,
	REVIEW_DATE TIMESTAMP_NTZ(9) NOT NULL,
	REVIEW_STARS NUMBER(38,0) NOT NULL,
	REVIEW_ID NUMBER(38,0),
	constraint PK_CUSTOMER_PRODUCT_REVIEWS primary key (CUSTOMER_ID, PRODUCT_ID),
	constraint CUSTOMER_PRODUCT_REVIEWS_PRODUCTS foreign key (PRODUCT_ID) references VISION.VISIONMART.PRODUCTS(PRODUCT_ID),
	constraint CUSTOMERS_CUSTOMER_PRODUCT_REVIEWS foreign key (CUSTOMER_ID) references VISION.VISIONMART.CUSTOMERS(CUSTOMER_ID)
);


create or replace TABLE VISION.VISIONMART.DATEDIMENSION (
	DATEKEY NUMBER(38,0),
	DATE DATE,
	DATETIME TIMESTAMP_NTZ(9),
	YEAR NUMBER(38,0),
	QUARTER NUMBER(38,0),
	QUARTERNAME VARCHAR(2),
	MONTH NUMBER(38,0),
	MONTHNAME VARCHAR(3),
	DAY NUMBER(38,0),
	DAYOFWEEK NUMBER(38,0),
	DAYNAME VARCHAR(3),
	WEEKDAY VARCHAR(1),
	WEEKOFYEAR NUMBER(38,0),
	DAYOFYEAR NUMBER(38,0)
);


create or replace TABLE VISION.VISIONMART.DEPARTMENTS_LOOKUP (
	DEPARTMENT_ID VARCHAR(20) NOT NULL,
	constraint PK_DEPARTMENTS_LOOKUP_DEPARTMENT_ID primary key (DEPARTMENT_ID)
);


create or replace TABLE VISION.VISIONMART.EMPLOYEES (
	EMPLOYEE_ID NUMBER(38,0) NOT NULL,
	EMPLOYEE_SSN VARCHAR(9) NOT NULL,
	EMPLOYEE_LASTNAME VARCHAR(50) NOT NULL,
	EMPLOYEE_FIRSTNAME VARCHAR(50) NOT NULL,
	EMPLOYEE_JOBTITLE VARCHAR(20) NOT NULL,
	EMPLOYEE_DEPARTMENT VARCHAR(20) NOT NULL,
	EMPLOYEE_BIRTHDATE TIMESTAMP_NTZ(9) NOT NULL,
	EMPLOYEE_HIREDATE TIMESTAMP_NTZ(9) NOT NULL,
	EMPLOYEE_TERMDATE TIMESTAMP_NTZ(9),
	EMPLOYEE_HOURLYWAGE NUMBER(19,4) NOT NULL,
	EMPLOYEE_FULLTIME BOOLEAN NOT NULL,
	EMPLOYEE_SUPERVISOR_ID NUMBER(38,0),
	constraint U_EMPLOYEE_SSN unique (EMPLOYEE_SSN),
	constraint PK_EMPLOYEES_EMPLOYEE_ID primary key (EMPLOYEE_ID),
	constraint FK_EMPLOYEE_DEPARTMENT foreign key (EMPLOYEE_DEPARTMENT) references VISION.VISIONMART.DEPARTMENTS_LOOKUP(DEPARTMENT_ID),
	constraint JOBTITLES_LOOKUP_EMPLOYEES foreign key (EMPLOYEE_JOBTITLE) references VISION.VISIONMART.JOBTITLES_LOOKUP(JOBTITLE_ID)
);


create or replace TABLE VISION.VISIONMART.EMPLOYEE_TIMESHEETS (
	TIMESHEET_ID NUMBER(38,0) NOT NULL,
	TIMESHEET_PAYROLLDATE TIMESTAMP_NTZ(9) NOT NULL,
	TIMESHEET_HOURLYRATE NUMBER(19,4) NOT NULL,
	TIMESHEET_EMPLOYEE_ID NUMBER(38,0) NOT NULL,
	TIMESHEET_HOURS NUMBER(3,1) NOT NULL,
	constraint PK_EMPLOYEE_TIMESHEETS_TIMESHEET_ID primary key (TIMESHEET_ID),
	constraint EMPLOYEES_EMPLOYEE_TIMESHEETS foreign key (TIMESHEET_EMPLOYEE_ID) references VISION.VISIONMART.EMPLOYEES(EMPLOYEE_ID)
);


create or replace TABLE VISION.VISIONMART.JOBTITLES_LOOKUP (
	JOBTITLE_ID VARCHAR(20) NOT NULL,
	constraint PK_JOBTITLES_LOOKUP_JOBTITLE_ID primary key (JOBTITLE_ID)
);

create or replace TABLE VISION.VISIONMART.ORDERS (
	ORDER_ID NUMBER(38,0) NOT NULL,
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	ORDER_DATE TIMESTAMP_NTZ(9) NOT NULL,
	SHIPPED_DATE TIMESTAMP_NTZ(9),
	SHIP_VIA VARCHAR(20) NOT NULL,
	CREDITCARD_ID NUMBER(38,0) NOT NULL,
	constraint FK_ORDERS_ORDER_ID primary key (ORDER_ID),
	constraint FK_ORDERS_CREDITCARD_ID foreign key (CREDITCARD_ID) references VISION.VISIONMART.CREDITCARDS(CREDITCARD_ID),
	constraint FK_ORDERS_CUSTOMERS foreign key (CUSTOMER_ID) references VISION.VISIONMART.CUSTOMERS(CUSTOMER_ID),
	constraint ORDERS_SHIPVIA_LOOKUP foreign key (SHIP_VIA) references VISION.VISIONMART.SHIPVIA_LOOKUP(SHIP_VIA)
);

create or replace TABLE VISION.VISIONMART.ORDERS (
	ORDER_ID NUMBER(38,0) NOT NULL,
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	ORDER_DATE TIMESTAMP_NTZ(9) NOT NULL,
	SHIPPED_DATE TIMESTAMP_NTZ(9),
	SHIP_VIA VARCHAR(20) NOT NULL,
	CREDITCARD_ID NUMBER(38,0) NOT NULL,
	constraint FK_ORDERS_ORDER_ID primary key (ORDER_ID),
	constraint FK_ORDERS_CREDITCARD_ID foreign key (CREDITCARD_ID) references VISION.VISIONMART.CREDITCARDS(CREDITCARD_ID),
	constraint FK_ORDERS_CUSTOMERS foreign key (CUSTOMER_ID) references VISION.VISIONMART.CUSTOMERS(CUSTOMER_ID),
	constraint ORDERS_SHIPVIA_LOOKUP foreign key (SHIP_VIA) references VISION.VISIONMART.SHIPVIA_LOOKUP(SHIP_VIA)
);

create or replace TABLE VISION.VISIONMART.PRODUCTS (
	PRODUCT_ID NUMBER(38,0) NOT NULL,
	PRODUCT_DEPARTMENT VARCHAR(20) NOT NULL,
	PRODUCT_NAME VARCHAR(50) NOT NULL,
	PRODUCT_RETAIL_PRICE NUMBER(19,4) NOT NULL,
	PRODUCT_WHOLESALE_PRICE NUMBER(19,4) NOT NULL,
	PRODUCT_IS_ACTIVE BOOLEAN NOT NULL,
	PRODUCT_ADD_DATE TIMESTAMP_NTZ(9) NOT NULL,
	PRODUCT_VENDOR_ID NUMBER(38,0) NOT NULL,
	PRODUCT_DESCRIPTION VARCHAR(1000),
	constraint U_PRODUCT_NAME_UNIQUE unique (PRODUCT_NAME),
	constraint PK_PRODUCTS_PRODUCT_ID primary key (PRODUCT_ID),
	constraint FK_FUDGEMART_PRODUCTS_PRODUCT_DEPARTMENT foreign key (PRODUCT_DEPARTMENT) references VISION.VISIONMART.DEPARTMENTS_LOOKUP(DEPARTMENT_ID),
	constraint PRODUCTS_VENDORS foreign key (PRODUCT_VENDOR_ID) references VISION.VISIONMART.VENDORS(VENDOR_ID)
);


create or replace TABLE VISION.VISIONMART.SHIPVIA_LOOKUP (
	SHIP_VIA VARCHAR(20) NOT NULL,
	constraint PK_FUDGEMART_SHIPVIA_LOOKUP primary key (SHIP_VIA)
);


create or replace TABLE VISION.VISIONMART.VENDORS (
	VENDOR_ID NUMBER(38,0) NOT NULL,
	VENDOR_NAME VARCHAR(50) NOT NULL,
	VENDOR_PHONE VARCHAR(20) NOT NULL,
	VENDOR_WEBSITE VARCHAR(1000),
	constraint U_VENDOR_NAME_UNIQUE unique (VENDOR_NAME),
	constraint PK_VENDORS_VENDOR_ID primary key (VENDOR_ID)
);



--Review ID is a Sequence
create or replace sequence REVIEW_ID_SEQ start with 1 increment by 1 noorder;
